{% import "macro.twig" as macro %}
{% block content %}
{% for package
    in project.indexes.packages
    |sort((a,b) => a.FullyQualifiedStructuralElementName <=> b.FullyQualifiedStructuralElementName)
%}
{% set hasWiki = false %}
{% for index in package.classes|merge(package.enums)|merge(package.constants)|merge(package.functions) %}
{% for tagName,tags in index.tags if tagName in ['wiki'] %}
{% if tags|length > 0 %}
{% set hasWiki = true %}
{% endif %}
{% endfor %}
{% endfor %}
{% if (
    package.classes|length
    or package.enums|length
    or package.constants|length
    or package.functions|length
    ) > 0
%}
{% if hasWiki %}
* {{ package.FullyQualifiedStructuralElementName }}
{% for class
    in package.classes
    |sort((a,b) => a.FullyQualifiedStructuralElementName <=> b.FullyQualifiedStructuralElementName)
%}
{% for tagName,tags in class.tags if tagName in ['wiki'] %}
{% for tag in tags %}
    * class: {{ macro.IndexLink(class, class.name) }}
{% endfor %}
{% endfor %}
{% endfor %}
{% for enum
    in package.enums
    |sort((a,b) => a.FullyQualifiedStructuralElementName <=> b.FullyQualifiedStructuralElementName)
%}
{% for tagName,tags in enum.tags if tagName in ['wiki'] %}
{% for tag in tags %}
    * enum: {{ macro.IndexLink(enum, enum.name) }}
{% endfor %}
{% endfor %}
{% endfor %}
{% for constant
    in package.constants
    |sort((a,b) => a.FullyQualifiedStructuralElementName <=> b.FullyQualifiedStructuralElementName)
%}
{% for tagName,tags in constant.tags if tagName in ['wiki'] %}
{% for tag in tags %}
    * constant: {{ macro.IndexLink(constant, constant.name) }}
{% endfor %}
{% endfor %}
{% endfor %}
{% for function
    in package.functions
    |sort((a,b) => a.FullyQualifiedStructuralElementName <=> b.FullyQualifiedStructuralElementName)
%}
{% for tagName,tags in function.tags if tagName in ['wiki'] %}
{% for tag in tags %}
    * function: {{ macro.IndexLink(function, function.name) }}
{% endfor %}
{% endfor %}
{% endfor %}
{% endif %}
{% endif %}
{% endfor %}
{% endblock %}